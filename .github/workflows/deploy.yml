name: Terraform Workflow

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login Docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Subindo imagem Docker
        run: |
          docker build -t ${{ secrets.DOCKER_USER }}/${{ secrets.DOCKER_REPO }}:latest . --no-cache
          docker push ${{ secrets.DOCKER_USER }}/${{ secrets.DOCKER_REPO }}:latest
      
      - name: Login AWS
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Adiciona contexto do cluster
        run: aws eks --region us-east-1 update-kubeconfig --name tech-challenge-eks

      - name: Criar arquivo de deployment com vari√°veis de ambiente
        run: |
          cat <<EOF > infra/api-deployment.yaml
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: node-app-deployment
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: node-app-deployment
            template:
              metadata:
                labels:
                  app: node-app-deployment
              spec:
                containers:
                - name: node-app
                  image: ${{ secrets.DOCKER_USER }}/${{ secrets.DOCKER_REPO }}:latest
                  env:
                    - name: DB_TEST_HOST
                      value: "${{ secrets.DB_TEST_HOST }}"
                    - name: DB_TEST_USER
                      value: "${{ secrets.DB_TEST_USER }}"
                    - name: DB_TEST_PASSWORD
                      value: "${{ secrets.DB_TEST_PASSWORD }}"
                    - name: DB_TEST_NAME
                      value: "${{ secrets.DB_TEST_NAME }}"
                    - name: DB_NAME
                      value: "${{ secrets.DB_NAME }}"
                    - name: EMAIL
                      value: "${{ secrets.EMAIL }}"
                    - name: EMAIL_PASSWORD
                      value: "${{ secrets.EMAIL_PASSWORD }}"
          EOF
          kubectl apply -f infra/api-deployment.yaml

      - name: Cria service
        run: kubectl apply -f infra/api-service.yaml --validate=false